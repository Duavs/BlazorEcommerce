@page "/blazor-forms"

<div class="col-12 offset-md-2 col-md-8 border">
    <div class="text-center pt-4">
        <h2 class="text-success">Product Form</h2>
        <hr/>
    </div>
    
    <div class="mx-2 px-2">
        <EditForm FormName="ProductCreate" Model="Product" OnValidSubmit="HandleProductCreate">
            <DataAnnotationsValidator/>
            @* <ValidationSummary/> *@
            <div class="form-group py-2">
                Product Name
                <InputText class="form-control" @bind-Value="@Product.Name"/>
                <ValidationMessage For="@(()=> Product.Name)"/>
            </div>
            <div class="form-group py-2">
                Price
                <InputNumber class="form-control" @bind-Value="@Product.Price"/>
                <ValidationMessage For="(()=> Product.Price)"/>
            </div>
            <div class="form-group py-2">
                Catergory
                <InputSelect class="form-select" @bind-Value="@Product.Category">
                    @foreach(var category in Enum.GetValues(typeof(Category)))
                    {
                        <option value="@category">@category</option>
                    }
                </InputSelect>
            </div>
            <div class="form-group py-2">
                Is Available
                <InputCheckbox @bind-Value="@Product.IsActive"/>
            </div>
            <div class="form-group py-2">
                Available After
                <InputDate class="form-control" @bind-Value="@Product.AvailableAfter"/>
            </div>
            <button class="btn btn-primary my-3" type="submit" style="width: 200px;">
                Create Product
            </button>
            <p class="text-success">@(IsProcessing == true ? "Processing.." : "")</p>
        </EditForm>
        <EditForm FormName="ProductCreateTemp" Model="ProductTemp" OnValidSubmit="HandleProductCreateTemp">
        </EditForm>
    </div>
    
    @if (createdProduct != null)
    {
        <div class="mx-2 pt-2 pb-5">
            <hr/>
            <h2 class="text-success">Product Created</h2>
            <div class="px-4">
                Name: @createdProduct.Name <br/>
                Price: @createdProduct.Price <br/>
                Category: @createdProduct.Category <br/>
                Is available: @(createdProduct.IsActive ? "Available" : "Not Available") <br/>
                Available After: @createdProduct.AvailableAfter <br/>
            </div>
        </div>
    }
</div>

@code {
    [SupplyParameterFromForm(FormName = "ProductCreateTemp")]
    public Product ProductTemp { get; set; } = new Product(){};
    [SupplyParameterFromForm(FormName = "ProductCreate")]
    public Product Product { get; set; } = new Product(){};

    private Product? createdProduct { get; set; }

    private bool IsProcessing { get; set; } = false;

    private async Task HandleProductCreate()
    {
        IsProcessing = true;
        createdProduct = null;
        await Task.Delay(3000);
        createdProduct = Product;
        IsProcessing = false;
    }
    
    private async Task HandleProductCreateTemp()
    {
        IsProcessing = true;
        createdProduct = null;
        await Task.Delay(3000);
        createdProduct = ProductTemp;
        IsProcessing = false;
    }

    @*     private async Task HandleProductCreateInvalid() *@
    @*     { *@
    @*         IsProcessing = true; *@
    @* *@
    @*         await Task.Delay(5000); *@
    @* *@
    @*         IsProcessing = false; *@
    @*     } *@
    @* } *@
}