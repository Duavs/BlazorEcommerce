@page "/learnblazor/bindprop"
<div class="row">
    <div class="col-6 border p-3">
        <h3 class="text-primary">Product Playground</h3>
        <hr>
        
        IsActive: <input type="checkbox" @bind="@Product.IsActive"/> <br/>
        Input Price: <input type="number" @bind="@Product.Price" @bind:event="oninput"/> <br/>

        Product Properties:
        <select @bind="selectedProperty">
            @foreach (var prop in Product.ProductProperties)
            {
                <option value="@prop.Key">@prop.Key</option>
            }
        </select>
    </div>
    <div class="col-6 border p-3">
        <PageTitle>Bind Property</PageTitle>
        <h3 class="text-primary">Product Summary</h3>
        <hr>
        Name: @Product.Name <br/>
        This Product is: @(Product.IsActive?"Active":"InActive") <br/>
        Price: @Product.Price <br/>
        <br/>
        Selected Property: @selectedProperty
        @if (!string.IsNullOrEmpty(selectedProperty))
        {
            <p>Selected Value: @Product.ProductProperties.FirstOrDefault(a=>a.Key==selectedProperty).Value</p>
        }

    </div>
    <div class="col-12 p-4">
        <h2 class="text-success">Product Table</h2>
        <table class="table table-striped table-bordered">
            <thead>
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>is Active</th>
            </tr>
            </thead>
       
            <tbody>
            @foreach (var product in ProductList)
            {
                <tr>
                    <td><input type="text" @bind="@product.Name" @bind:event="oninput"></td>
                    <td><input type="number" @bind="@product.Price" @bind:event="oninput"/> <br/></td>
                    <td><input type="checkbox" @bind="@product.IsActive"/></td>
                </tr>
            }
            </tbody>
            <br/>
            <h3 class="text-primary">Product Summary</h3>
            <ul>
                @foreach (var product in ProductList)
                {
                    <li>@product.Name - [@product.Price] - @(product.IsActive ? "Active" : "Inactive")</li>
                }
                </ul>
        </table>
    </div>
   
</div>


@code {
    private string selectedProperty = "";
    
    Models.Product Product = new()
    {
        Id = 1,
        Name = "Sample Product",
        IsActive = true,
        Price = 5m,
        ProductProperties = new List<Product_Prop>()
        {
            new Product_Prop { Id = 1, Key = "Color", Value = "Red" },
            new Product_Prop { Id = 2, Key = "Size", Value = "25ml" },
            new Product_Prop { Id = 3, Key = "Flavor", Value = "Vanilla" },
        }
    };

    List<Product> ProductList = new();

    protected override void OnInitialized()
    {
        ProductList.Add(new()
        {
            Id = 1,
            Name = "Midnight Blaze",
            IsActive = false,
            ProductProperties = new List<Product_Prop>()
            {
                new Product_Prop { Id = 1, Key = "Flavor", Value = "Rose"},
                new Product_Prop { Id = 2, Key = "Size", Value = "20oz"},
                new Product_Prop { Id = 3, Key = "Color", Value="Purple" }
            }
        });

        ProductList.Add(new()
        {
            Id = 2,
            Name = "Blossom Lily",
            IsActive = true,
            ProductProperties = new List<Product_Prop>()
            {
                new Product_Prop { Id = 1, Key = "Flavor", Value = "Lily" },
                new Product_Prop { Id = 2, Key = "Size", Value = "18oz" },
                new Product_Prop {Id = 3,Key = "Color",Value = "White"}
            }
        });  
    }
}