@page "/learnrouting"
@* @page "/learnrouting/{Param1}/{Param2}" *@
@* @page "/learnrouting/{Param1}" *@
@page "/learnblazor/learnrouting"
@page "/learnrouting/learnBlazor"
@page "/learnrouting/catch-all/{*CatchAllParams}"

@inject NavigationManager _NavigationManager

<title>Routing</title>
<h3>LearnRouting</h3>

<p>Param1 is: @Param1</p>
<p>Param2 is: @Param2</p>
<p>Parameters are: @CatchAllParams</p>

@* <a href="learnRouting?Param1=Learn&Param2=Blazor" class="btn btn-primary">Navigate to query parameter</a> *@
<button @onclick="NavigateToQueryParam" class="btn btn-primary">Navigate to query parameter</button>
<button class="btn btn-success" @onclick="LoadParameter">Load Parameter</button>
<div class="bg-info" style="height: 1000px"></div>
<h2 id="targetElement">Main title</h2>
@code {
    [SupplyParameterFromQuery(Name = "Param1")]public string Param1 { get; set; }
    [SupplyParameterFromQuery] public string Param2 { get; set; } = "";
    [Parameter] public string CatchAllParams { get; set; } = "";
    
    private void LoadParameter()
    {
        var uri = new Uri(_NavigationManager.Uri);
        var query = Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(uri.Query);
        Param1 = query["Param1"];
        Param2 = query["Param2"];
        // _NavigationManager.Refresh(forceReload: true);
    }

    private void NavigateToQueryParam()
    {
        _NavigationManager.NavigateTo("learnrouting?Param1=Learn&Param2=Blazor");
    }
}       